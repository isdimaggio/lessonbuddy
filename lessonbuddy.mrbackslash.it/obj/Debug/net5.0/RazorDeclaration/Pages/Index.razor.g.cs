// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace lessonbuddy.mrbackslash.it.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using lessonbuddy.mrbackslash.it;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using lessonbuddy.mrbackslash.it.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\Pages\Index.razor"
using lessonbuddy.mrbackslash.it.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\Pages\Index.razor"
using lessonbuddy.mrbackslash.it.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\Pages\Index.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 143 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\Pages\Index.razor"
       

    [CascadingParameter]
	private Task<AuthenticationState> AuthenticationStateTask { get; set; }
	private AuthenticationState authenticationState;

    private MudTable<Session> sessionDataTable;

    private List<Session> sessions;
    private string searchString = "";

    private Session selectedItem = null;
    private Session elementBeforeEdit;
    private Session elementToDelete;

    private DialogOptions graphDialogOptions;
    private DialogParameters graphDialogParameters;
    private DialogParameters deleteDialogParameters;

    private bool isAdmin = false;

    private void OpenGraphDialog(Session session)
    {
        graphDialogParameters = new DialogParameters();
        graphDialogParameters.Add("Session", session);        

        dialogService.Show<GraphDialog>("", graphDialogParameters, graphDialogOptions);
    }

    private void DeleteSessionDialog(Session session)
    {
        deleteDialogParameters = new DialogParameters();
        deleteDialogParameters.Add("Session", session); 
        deleteDialogParameters.Add("SessionService", sessionService);
        
        dialogService.Show<DeleteDialog>("Eliminare la sessione?", deleteDialogParameters);
    }

    protected void LoadSessions()
    {
        if (!isAdmin)
		{
			sessions = sessionService.GetAll().Where(s => s.Username == authenticationState.User.Identity.Name).ToList();
		}
		else
		{
			sessions = sessionService.GetAll();
		}
    }

    protected override async Task OnInitializedAsync()
	{
		authenticationState = await AuthenticationStateTask;

		if (authenticationState.User.Identity.IsAuthenticated)
		{
			if (authenticationState.User.IsInRole("Administrators"))
			{
				isAdmin = true;
			}
        }

        LoadSessions();

        graphDialogOptions = new DialogOptions
        {
            FullScreen = true,
            CloseButton = true,
            DisableBackdropClick = true,
            NoHeader = true,
            Position = DialogPosition.Center            
        };		
	}	

    private void BackupItem(object element)
    {
        elementBeforeEdit = new()
        {            
            Username = ((Session)element).Username,
            Subject = ((Session)element).Subject,
            Location = ((Session)element).Location,
            UploadDateTime = ((Session)element).UploadDateTime
        };
    }

    private void ResetItemToOriginalValues(object element)
    {
        ((Session)element).Username = elementBeforeEdit.Username;
        ((Session)element).Subject = elementBeforeEdit.Subject;
        ((Session)element).Location = elementBeforeEdit.Location;
        ((Session)element).UploadDateTime = elementBeforeEdit.UploadDateTime;
    }

	private bool FilterFunc(Session session)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (session.Username.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (session.Subject.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (session.Location.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private void SaveSession()
    {
        sessionService.Update(selectedItem);
    }

    IList<IBrowserFile> files = new List<IBrowserFile>();
    private async Task UploadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }

        string result = "";

        foreach (var file in files)
        {
            result = await sessionService.Upload(file, authenticationState.User.Identity.Name);
        }

        if(result == "Sessione caricata correttamente")
        {
            Snackbar.Add(result, Severity.Success);
        }
        else
        {
            Snackbar.Add(result, Severity.Error);
        }

        LoadSessions();

        //await sessionDataTable.ReloadServerData();

    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SessionsService sessionService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDialogService dialogService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISnackbar Snackbar { get; set; }
    }
}
#pragma warning restore 1591
