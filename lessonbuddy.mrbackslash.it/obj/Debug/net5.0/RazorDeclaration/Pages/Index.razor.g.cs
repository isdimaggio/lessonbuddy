// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace lessonbuddy.mrbackslash.it.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using lessonbuddy.mrbackslash.it;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using lessonbuddy.mrbackslash.it.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Blazorise;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Blazorise.DataGrid;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\_Imports.razor"
using Blazorise.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\Pages\Index.razor"
using lessonbuddy.mrbackslash.it.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\Pages\Index.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 74 "F:\MRBACKSLASH\lessonbuddy\lessonbuddy.mrbackslash.it\Pages\Index.razor"
       

	[CascadingParameter]
	private Task<AuthenticationState> AuthenticationStateTask { get; set; }
	private AuthenticationState authenticationState;

	private List<Session> sessions;
	private Session selectedSession;
	private Visibility visibility = Visibility.Invisible;

	private bool isAdmin = false;

	private LineChart<double> lineChart;

	protected override async Task OnInitializedAsync()
	{
		authenticationState = await AuthenticationStateTask;

		if (authenticationState.User.Identity.IsAuthenticated)
		{
			if (authenticationState.User.IsInRole("Administrators"))
			{
				isAdmin = true;
			}
		}

		if (isAdmin)
		{
			sessions = DBContext.Sessions.ToList();
		}
		else
		{
			sessions = DBContext.Sessions.AsQueryable().Where(s => s.Username == authenticationState.User.Identity.Name).ToList();
		}

		//foreach (Session session in sessions)
		//{
		//	if (!DBContext.Payloads.Where(p => p.Idsession == session.Idsession).Any())
		//	{
		//		for (int i = 0; i < 600; i++)
		//		{
		//			Payload payload = new Payload();

		//			payload.Idsession = session.Idsession;
		//			payload.EventTime = DateTime.Now.AddMilliseconds(100 * i);
		//			payload.ConnectionStrength = (int)(100.0 + 50.0 * Math.Sin((Math.PI / 180.0d) * (360.0d / 600.0d) * ((double)i + 30.0d)));
		//			payload.AttentionLevel = (int)(100.0 + 50.0 * Math.Sin((Math.PI / 180.0d) * (360.0d / 600.0d) * ((double)i) + 60.0d));
		//			payload.MeditationLevel = (int)(100.0 + 50.0 * Math.Sin((Math.PI / 180.0d) * (360.0d / 600.0d) * ((double)i + 90.0d)));

		//			DBContext.Payloads.Add(payload);
		//		}

		//		DBContext.SaveChanges();
		//	}
		//}
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (selectedSession != null)
		{
			List<Payload> payloads = DBContext.Payloads
													.Where(p => p.Idsession == selectedSession.Idsession)
													.OrderBy(p => p.EventTime)
													.ToList();

			await lineChart.Clear();

			string[] labels = payloads.Select(p => p.EventTime.ToString("HH:mm:ss.f")).Distinct().ToArray();
			LineChartDataset<double>[] parameters =
						{
				new LineChartDataset<double>
				{
					Label = "Connessione",
					Data = payloads.Select(p => (double)p.ConnectionStrength).ToList(),
					BackgroundColor = ChartColor.FromRgba( 255, 99, 132, 0.2f ),
					BorderColor = ChartColor.FromRgba( 255, 99, 132, 1f ),
					Fill = true,
					PointRadius = 3,
					BorderWidth = 1,
					PointBorderColor = ChartColor.FromRgba( 255, 99, 132, 1f ),
					CubicInterpolationMode = "monotone",
				},
				new LineChartDataset<double>
				{
					Label = "Attenzione",
					Data = payloads.Select(p => (double)p.AttentionLevel).ToList(),
					//BackgroundColor = ChartColor.FromRgba( 54, 162, 235, 0.2f ),
					BorderColor = ChartColor.FromRgba( 54, 162, 235, 1f ),
					Fill = true,
					PointRadius = 3,
					BorderWidth = 1,
					PointBorderColor = ChartColor.FromRgba( 54, 162, 235, 1f ),
					CubicInterpolationMode = "monotone",
				},
				new LineChartDataset<double>
				{
					Label = "Meditazione",
					Data = payloads.Select(p => (double)p.MeditationLevel).ToList(),
					//BackgroundColor = ChartColor.FromRgba( 255, 206, 86, 0.2f ),
					BorderColor = ChartColor.FromRgba( 255, 206, 86, 1f ),
					Fill = true,
					PointRadius = 3,
					BorderWidth = 1,
					PointBorderColor = ChartColor.FromRgba( 255, 206, 86, 1f ),
					CubicInterpolationMode = "monotone",
				}
			};

			await lineChart.AddLabelsDatasetsAndUpdate
			(
				labels,
				parameters
			);
		}
	}

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private LessonBuddyContext DBContext { get; set; }
    }
}
#pragma warning restore 1591
